workflows:
#   ios-workflow:
#     name: iOS Workflow
#     # instance_type: mac_mini
#     max_build_duration: 120
#     environment:
#       vars:
#         XCODE_WORKSPACE: "Runner.xcworkspace"
#         XCODE_SCHEME: "Runner"                
#         APP_STORE_CONNECT_ISSUER_ID: Encrypted(Z0FBQUFBQmhKaDF2TDQ3WFN0c29rd2lVeXV5elhRS3htNDZjUU9ZZUt2bk5lZmFldnplSDNQd1FMaFluVWJ6djM2ZDlOa1ZDUkdnYXVVcmpDekJPdU94RDZzRDFxcVNqSVRqdnlJTUhuUVJvaVY3TjZieTJkVHdWUEcxQ0d5UFZLQ050emhIcjd6OGQ=) # <-- Put your encrypted App Store Connect Issuer Id here 
#         APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(Z0FBQUFBQmhKa1BBcjBhOHVxcklHcVY1aEJLbDlCNzZJRUtYNGx5QXBBOURyQ0x1WVFFNXpvYmF5YXNabk5BYzFES1ZQTjhKWjlSWEt0bGFsak5YWS1ldDl4RFZJSG5Bb3c9PQ==) # <-- Put your encrypted App Store Connect Key Identifier here 
#         APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(Z0FBQUFBQmhKa3Q1VDFqZV9JcXVzMWFXWWwySzdTMWVBczJ3V0lRWkRxbDdmRG5tUk9mRjk5X1YyQWh3UlE0VWpLRHlWQlhwRGoyR1VHZzliY1pFbThGdmdoU3RHMmRndFdNd3VwUnVvRjNSZ25UOS0tVm85Z0Vocnl3QXpKYkg0VTY2RU15QnVHRFM5ZFc0M290TVRSZ0Y1azFrcHdFSE1OUWlaRllmbGdobWVzVjNhcTFHY1RnekQxRkU1aVFzb2ZHMFZXaEdNdmYtbV9XU1BUalZ5SWlXUk1FalR4RVAwVTgyQUliVDJEcWNTLWEzdWxKcHJ1RjRsQmdnWjZPNXVFVXNtbTdMaW1STFk3YkRnWDFZNDhOTElEQlJvbG9yYS1aVWVBX2M4dXU5Y0V1dHFZczVTZWpyTk9raGVqSnZBb1JfNjUyWmx2MkNZUWpnSHdXLTNRVFBwdUlYYjh2WVpsY0pZX3k2Zm9wbmpiUkdmbWxKWUctcUNucnE0b0E0Ukt5RmRFdjhBZ3VKRnltNVFsZzFsQU1kYnhrTHo1cW9MR240UHdMeWNYZUVuX2hpdFhhQ1BFMD0=) # <-- Put your encrypted App Store Connect Private Key here 
#         CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmhKa3NKZXE0Z0JFTzRnS245RzFxNHFVQ2N6ZkhiVjI4UWZqOW44dkRVRy1uOWtUUkl6czVVLTkwYXZDZ21tdEh0NVU0NVdRMzdBTkY4NWtidU9KYTdXSm4yLWJ6cTZYVmRhLS1DMUNYeGJ3NHc4VjVnT2g5VVR4VURlUkRFdlZsY0V3b2RiOXJZOW52UEtac3JLbVFtY0ZiOTBPYUVQRE4yZXpQcTNkbEhuY2UtNHkteE5SX1V4dnNGYzVMdVBRNkU1NTAyZ2dRM2NCdW1CczhrbTd6N3FsamdwOHBKWUYtZDd6akFoTHRjQVBWTFRxbFhaUnJKWWtnVVRfSHVaWGduOHZNaHVpaDZTOVFfSnRSMm5qZ2xLNFFwY2d5ZnhPbHU0eTFfaERSWk5zUlVVcWZ3OHFxYlhfSGlTZThMSDIyS1djMTdmdWdraHlSbjZFWUoxbUd6Nm1oNHpwc1hYMDFNV0tuYndZc1dERzNJSmxmU0xncWdySFl0Ul84dG0taFZzSXU1S0JGcnBqUHNPQlJiemhMTkZWTUI0S0Y0OHNTR2MtVWJzNkNMT1FTU19jaU0zV19hcUF5ekJMb3Vxenl3cHBuRk9uZWtQbzZUbFhrSnNaUHM1ZzNjRENQdWRDQTgyOG9zUXg4U0NXNXNSQmduMjZkbnF3N0FNTmVsdGx2d1JiQjladFUxc3h6TjJLV1NJMGVPQ1NCSXRBX2xNVDB2UGZETUYxdUpQaWZUWWl3OHZiR1loQ0tFZHBrWTh4Y3pMMFhEaU9Qa21paEdSMGJnVUJRQVYzMl90cmNIeDB6UUcwdGFNOVlvVUJfeXU1SGJXZEtGeEdHTnVyTWM1b192N2FDRWNobU5BWGxpdmk5dDFYZ01NT1NqSnczbEJZc05LN2NCaHN3Q09McUY5T090OUVzZFdCaUhJdkxObVFqYnRXaE9LT090Sk54VDFUb0NvNW1ycE0tY2I0eURydzhCTThIUmxkRjFaeUlVbDJFbFJocy1PYU9yQ2Y0b1owVmJJZXpmdEFCcUQweXJWd2dtN3hXVzBWNGUzMjhJaFhBQ255UDAtUk5HUW5KTlN4Y2cwckdFRVV3UUMzLXhrcnp4R0NwSTFIRUwxeWw0Si1TX0FvZWZVNTFsc0U1RmhKaDhFc2MwWUVmQ3RtQXFfVEh6cXZlNnRvVXBfX1dzdHBRMVhQOGlJajNfYlN2eHhOcnNFT3A2cEsxRzhiRFF6eW9WZHYtcVdNTlg0M2lqSmdWZU83ZWNpb3ZVV2FUYk0ycUwydGZYai1iNkJOMDZveEU5SUJaNWZzaHM5WFBxR0diLXN3N1NiX0ZJZDlwM2FwVlNCaEV2eWx0bHVkamdQS3pZMzBzS0hxMlpMdjJZMEo5OWR3TU92Nk42VHdWQWN0UWR6U3Ezb0haTGZ3MnlxTlhxVEphTnltVm9vcExPMF9nZjhsTUVhTkZwY19Od0tLNDE2ZE94ZXlNbG5RWGYzWmpWZE9sWTk4a0dkYkM3OC00X0h4YkdDeXU4eWlIX1h6ZFM4Nm95aTU0a3BXQi1BUXNkNjJVdnhsMFZFODFya3dWZjkyNjRtdWRoUEZ5YlFfaVNiWDBXMWR5eldXRFpILTR0Nl9OWWpkM0VDNWJsVjcyM1Q5U0MwbVhya1RDY2JCYU95ZGszMmlHVHh5Vzd6MVUtZzRGQ2w0UTltSWx4MVVadE04dTg4VkFNWXEyV0Ixeldua0w5QTA1eFJtbF9IWmZFOXV1d0phTDNtSUpVOTRqN2N5cS16dWMtMHprc3pTVHlUeFhRS1d1MnhHTmFLazd2WmRZWXZQb0ZMNXBpYUwzVTd4a3RfYjZ4RUptUDc0eWNhN2Zrc25GQlZFcktVM3Z4TXNfcDlUdnFhYU5WQ3hKZU91OGNJQThRQkpEcWRKdm5ybENrUUE2ZzM5c2oxWWczQmNjSGRCR24wanJxWXBMTlJCZlZfRWJlcFdmVFFmaEZPVnY1ZkdjMmMxdjA1V3dadXNTZEZid0stank0N0d1SzB3ZTk1QnNyb3c3UUFlbF9oVVFDaWNab1Q3ZlRSVW9ER3hhc29ZU0ZkQXFWOGZKMlNITE1uNWpYM2Zxd0tmTkxiTFIxNWlxejFFc2lsNmxGTE1WeDlxM2E1bE9yWHlIZTE5WHhzYnlFWEpURVRrVHpoSUFaMzhsU3pmRW5vd2Z0SFZhWVJQNW5JR2dTNkpzYUlGU21LSmRzZ1RtV3prSVBYM2hOb3hkQWpWQ0NZcURnbnpZM3piS0Z1SnNONWgwdTZJdW93TXFPMGh5WHJPSGZzcHJxaWdob041Qk12Z3BuSXJKZGE5dE15VEN5MkJSaV9JSUIwRjRPbndNd3F0djVJcVFOODAtV2ZnVi1zYVAtSkk1NkdVVEUzS0t0aUozY1E2NlBaZkN5WjZlM3dUTFJnLXVjQlUzUWNPbjJSeE1rdjBZcG1hZnlmdEdmX2xRRmRweVd5ZTRQUkg3dUNSMG03VWk3ZWNPR002cDJQd2h1UE4zU0RVYmlzNTZJZjJYVVptaE5nYTJ1UXFwMXpyNVJfdmxtNG5idVphMkpEekptazJOUk04U0Vrb1NubUlCeW9ub3JfNHRlSmFwQlFNRFRGQVp5YjVWSXczY0JQSEw3Z0xCSkJKQllpRWJ3YldCY2poYXNUWFMwZUdzTF80c0t4dS1HaDl6QmxMTjB0clQ5Ump4Wmp4bjFaN0NSVGZ2VWdRR21mbDQxUDFyQnE4WDN4TzQ3Ry1LLWp1cE54QXJGRWYwZ2NuS2ZCVWZjejY2VmYyaTBxbUlGVmFQc2VQY00zUUpKN0lnZGh0azh3NlNxdkFwSWFxZUpqQ1lmdXN1YlBYb3dXejlSMGlPcC0tQUdDeTBEOEhzdDJzVEl2LWdGLWgtdnRLakxEV1lZN1RxSGpEd2lxbVY1QUdrZ3l6VDhFZHJ4d21NOTJYLUs2SkNhZUVUUkU5bWhhQkc3MW1pQTRLb2VtRFFhTThKTHptNEE5bXNFYW8zS0t5Ym0zNDdldE9mZHRuTGw4YnZNb3BzWDFzblBwdFhaZG5XekoteWdVWXN4TmJLLUVnTU5ySWFuQy0ybzl0WVFHdz09) # <-- Put your encrypted Certificate Private Key here 
#         BUNDLE_ID: "com.example.integrationBrowserstack" # <-- Put your bundle id here dhfkdsf
#       flutter: stable
#       xcode: 13.0
#       cocoapods: default
#     scripts:
#       - name: Cmod
#         script: |
#            chmod 0600 ~/.netrc 
#       - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
#         script: |
#           keychain initialize
#       - name: Fetch signing files
#         script: |
#           app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_ADHOC --create
#       - name: Use system default keychain
#         script: |
#           keychain add-certificates
#       - name: Set up code signing settings on Xcode project
#         script: |
#           xcode-project use-profiles --project=ios/Runner.xcodeproj
#       - name: Get Flutter packages
#         script: |
#           cd . && flutter packages pub get
#         ignore_failure: true          
#       - name: Install pods
#         script: |
#           find . -name "Podfile" -execdir pod install \;
#       - name: Testing
#         script: |
#            flutter build ios
#       - name: Flutter build ipa and automatic versioning
#         script: |
#           flutter build ipa --release \
#           --build-name=1.0.0 \
#           --build-number=$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_ID") + 1)) \
#           --export-options-plist=/Users/builder/export_options.plist
#       - name: Zip
#         script: |
#            zip --symlinks -r MyAppUITests.zip /Users/builder/clone/build/ios/iphoneos/Runner.app.
#       - name: App upload and Set app id in environment variable.
#         script: |      
#           APP_URL=$(curl -u "nihalagazade_JxPH1i:4y5LkQnzzGkv2s7ERZ4q" -X POST "https://api-cloud.browserstack.com/app-automate/upload" -F "file=@build/ios/ipa/nihal.ipa" | jq -r '.app_url') 
#            echo $APP_URL
#           RESPONSE=$(curl -u "nihalagazade_JxPH1i:4y5LkQnzzGkv2s7ERZ4q" -X POST "https://api-cloud.browserstack.com/app-automate/xcuitest/test-suite" -F "file=@$FCI_BUILD_DIR/MyAppUITests.zip")
#            echo $RESPONSE
#           TEST_URL=$(echo $RESPONSE | jq -r '.test_url')
#            echo $TEST_URL
#           curl -X POST "https://api-cloud.browserstack.com/app-automate/xcuitest/build" -d "{\"devices\": [\"iPhone 11 Pro-13\"], "app": ""'"$APP_URL"'"", \"deviceLogs\" : \"true\", "testSuite": "'"$TEST_URL"'"}" -H "Content-Type: application/json" -u "nihalagazade_JxPH1i:4y5LkQnzzGkv2s7ERZ4q"    
#     artifacts:
#       - build/ios/ipa/*.ipa
#       - /tmp/xcodebuild_logs/*.log
#       - flutter_drive.log 
#       - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app


                    
  android-workflow:
    name: Android Workflow
    max_build_duration: 120
    environment:
      vars:
        CM_KEYSTORE: Encrypted(Z0FBQUFBQmcwbDY4ZXpPX2hteWxOSkNQU0ZIOWExN1BkZm5DX1VUMXVYbnVSLUtiMVhhMGVqT1ZHVUEweFZlamhDNEpNRXJ6LVQ1TU9QX0E5ZDdycmNjaVQzdHBrY0hpSnZsUl80T2NnWHJnVmc5ZWJHX2tlNkk4WHZYTUJMR01HUXZOVHoxWDhyX0dYVUExbjQyeGZrQ29ObjdfTTNQa1hfUnRkQVlTY3FLOGlPaS1ncWI0ZmlVVFVjc09QZU14TXlLYjRpVF9IcHRZLVFPNkV5Z0xKUzA2dlpFWkQwYnFuMkx0VWNGX1VTaU9UZnVTcWpudDhWakgwOHhnT19TQ3h4M0RORUNNQ1liQks0R1RvZDZxQnByT29zOGJFdVk4RnJSdXRBSy1HaW9JVnJUdVlndS1VZkNET285WDdCaUZhVUZDN1YtTExkem5uSXZmZERSMkI5eHM0cGlWZUlLQkxkTFVWNEd4TFRNYl9uOUFlTi1wMXlld1NsZWQ5eG5fcmdJdDNPYW10alZ5ZWhVNWFjb3E3Q1ZmNTJkTjdYcEh3WnpITlltSDhCS0EwY2FIZFg0b0NsblZUY1BKaHJYc3FueWh3UWd3WkhjaUJJaUpKanNRWG1PVnpOVFVOcDhvS19uZF9aVUZkVnIwSUlSYTRZd25RRGJnc3AyRkFVZHJSR0ZaS1hYUmI3SlpmcG5USlpHQi1NMFJWWFVST19pLWVsZEgzTk5CNFhLS3NZRXNhQUVjdHp2ZUNBdWpWTlRmYldxUjFMMndncVk1Nk5rTW9MNldjV3RrR3NwYXhsVVNSNUNpWE5TcnltY2E4bnNhLUk5Ry1pd1RXZVJxWTU0V0w2SUhDbVRobkFReFo3Vk5TVm54N1g1SFdVTVFDdUZROTRmZEE3a1dKeWEyaFlrYWRFLXJQaHNLdk1XcTBIV0tlUmFiLW5BYXlyZWNlOWpyd2dkSWl3Zk8xR3JpWmhQTDFPeUZPMXI2RHo0SFdudGh0X01rNHJPVXhuT1ZabkxmaUJ6Vjl6cjRMZXgxWE9EUjRKVkVYY0lHRDdHcVFMODBjVHo5UXcwLW5kSEhCR1dPVWtYYWVSMUxTb3BERmU3ZTZBYlQtNEViaXU3UkEtZ0hrVURRa0p3YmRnT1hfdkFJWXVaWE1Vcmw0T1ZMYXVGT2dVbzV0dWJ6V3pTUkhBQmh5d3FfWUJxLUN5VFVyMmhITVprd2NFb2hHOURfOHRwcGtLT210Z256RFlTLVI3cmMxaWY0dEFDYmJudG1GRTI4Qmo4YTJpaG9jTGVHdG1VbHRpM3hFcUlOYV9RWVl1bzN2Vk1XTEhfdXRXaWFDcUFRZXJyc3h1SlA3TWo3WlJRVFhxYlZFRHlkSHkweUtQbnlFaWV3Tmx5UkIyNmR4RXF6TTJXRmpCMDRCWVd1Z281dF8tNjlYSWRqbUdMY3JuZU42clIxanZWWmlVcXl5dFlYRXB5QVA3OGNZMGo4ektNNG9rSkNWby1NTHRxVGJXcG16XzJlbG1FaDY2X3dIUjV1Q2JoZGVYc1ZxU2t3UHRDOFpwYXNoejFSZElMWU1ON0xSeE1aX0N6bU94bklvV0ZXcWZvUXFZbTFZN256eU9VNnd0Q3ByVFBkU3U5QlJLR0lRRXROMXdJTmxjS3FKbUJod1FGbGM5UUdkLU5VRjdsQnFEVVE0MVFzN2lGaWg5dTZlTTlJUlJqa1ozcHRqX1hrOHR1YU9jUkY2SEUwNk5pQndTOUIxcTFpQU9lcW9uN3ZPeFlDN0tiM09hSWhtVVhQVjktdGVZXzB2emozZ1N5VG5OT1FWc1M0emR0Yk1QQWVyS0VUSUM5azlaZmJGcnN1dG4xWVN5RFdjUUhXWDY2d1JTTm1RUWU1eVZuRk1VM1hxWUZ3QlZvNHg4ME9UY0I5cnZrQVBnWU9FRW03WXJ3LU1HT3BibUhMSnA3VHpSekY5WFJnQ25acXBJOUNkaFpXemJrSUNHS2dXNFl4T1FFOHlLdWR4cEVFeE5VRFVpVHRTVlFURWFiV2IzQ2lxLWFhSk01cnZXX1lBeDFOWE5jN3JtdzYyNHlHbHAxYzFpTmVYUXZJd3RKcW9pNGw3cmMxX3d4dl9sQ1kxbTVCandoN2NKY3FLbmpObEdQSklTeGR0Wk1UcG5OLW9wcjZONHRxbWxRSEtRbVpNSE1HUmduVG81SDJfczBid2NoZlkwRDlmazd5ZHFsV1E4bFhCZG05a1ZYLXVSNEJzQjJabWNxSmZkOFRqSzZfUm5La05pOEo2anVOemFBZTRfXzlKTmlmNVQta01rQjBpUnVPeElLT28zTklGNzRJczdRT2s5b1NpUTFxclp0Y0xzXzdWTWZ6dGYxQ093YVJ0ZTdJMFJFZFBNdkJCVTJNV1E0b0NUZjJwdElsQnNvNFdrUklwSGpGY3lrLTk4TmJ6eU5WekllQU9TdmtHSHNNbG1IZ1NDNGZPWUh0QkY5N2Z5UmV6S3Z2Tk9OSWcwUWx3QnFMSGdxdmx4NVRXemFSMmJtWTA3UFpaRjZCM3lWTHhlNHBCaUVjX1hoYng3d0FpT3FRdVRTU3BYa2RaUWYxVTBudlVNUEtZM3htVVJIYUxuN1dhaGNXaERnbG9PN2dvN0RYU1RyQVU3alB2ZEYxT1M2TUxYTWN0akREbjNRWjhpbzhjVnJVaEdIUVNBeVhnTzNWNnVQeExLMWY1Yi0xNVBlU2M3NlNrdllLNlRfbno5aU9qRmZCYlZWVTRqV3hKWElYTUF2LVB2c0U0cEpGemVIVUNOSFhqN3d6RXVLcEFjLUMtY20zVW84amdPTFc5U0x1Q0hVeFQzdWUzdlFUazdRU2hpSE11VHBpSjhWWUtNUUhGQ1I1WWdzZ01DVFAzVElvNzVLMEVYNlFHaGlnaEJ0UGZrS3ZlMmJ5MFY4eXNZVm8ybUxMUVV3LTNJWkF1VmdxWmpNVkhwSjYxYllMVkJnYzZVM2hXS0FvRW1IMzh3eTQ3REZYc1BVNVJnbHIzVTljMXNYQ2M3b2t3aEhXckM3dmZiYmNnamVoTkxLU2kwUGhYX3h1eW1kYXo3ekhidXhCbVZNN3N4UXZzV2UxcXh1NWdtTXpLOEJ3VUNfbDM2eW1YZ0FxYmZCMEU4VW4xRWFpSjdkUHRsUTVGYWJmOFV6c24tS1d0NzAtdFppXzNPME1sNTh0cEJPT0xCWFVlQUN5MTFSdGFTM3F4Z0NaMkhLRXJqc1ZwZkZKSlhjaFp5ODctbHQ2aDZkT05pTHJEZzM2cDJKdmwtN0pZNF9wQ2p4cUZhREY3X0NWdFlUMGc4UTFOcEpBQ0tiYld5UGRnaGlWZjFvc0Z1eUVFckF5SEpoSV9wWHBQaV9HWURfelZQTUduRWxJSmpVakxmbVRSUmU2SlVTNlktSUhKYzl2eVVrV2pjMkNhNV93dWYtelZHTXE2YlFUank3ZEp1V042dlhNSms3amtwU3QzUzVrY0I2cjI1TkZtVnlneHV6N2RZU3dsQ1M0a1pxbndPMzZnZHk3MUJuUkNFMGQ4MzhpamJsZHNJYWM2QUpaVE9wTXBJaVFRNncwbGxneV85UWZQcWNSMHJjdVJnaVNMRVoxZGxUS3dpOGN5V0V2SXFlcU5RbWJuUEJMVTYwZjQ1MUVNU09XVWhRWkVFZmtlRHlZdlU5NE5ZcnhnbWRSTjBCdHFBMXdqWFBwWmFyb3NoSHpMU0hpSXp4bFBFcVNTb2dnTGJ6QUo3aXZkVW5kR2FiWFZ3YmtLaGRtVm5OOUtxOEZ3eTFVcXhnVWh3VUxnVVJtMm9GdzFCbnVzTTA4akZ3cG1xeDM1SmVXbXZXS0hmeTFXeF9hLURlVmJ0MFRFbm1iUWRfVDhIcGtlcW9GMXh6WjAzTXc3em9tNkdDdVVOTmROYlFaQ0FCSmczS0JKQkIwUENWSzN0bUZ6ZTFjamVuZGJWWUM4NkdUakE3TTZqeEtETmctb2Q2S00xTDUwd1VURkg3RWU0UkZ0VTgyLWVnZzJLekRMSmkydDh5M3lwc3pGZTEtN054aXVtenFrWnkyTFFLQTRJQ2htZ3YwTHROTGxsc0VXNGlNYjRPekdOMkI0WkJ6VU1IWDRfZ3phTUNjNEw0ODMySXdjTi13SWZEMm9ZLWtZcWtHVndYM29valFlN0U4R0wxZjViSWJHZGRya3E1V1ZsSDlfOHJZbEFiNzlXdjY2NUE3RVNVbVZveE52c3RocWNUSVM1UGw3aklsMEtUZzExMnFyRS1nMlpvbnRYS2prX1FkQzlvTjBxWWdBdGN3RkwwWk1aUVpnMG5BbzdQbk5MNi1wM0VWcDgzY1VQU1dxZ3N3SG9UbGNYdWxhT0Y3WWRzRkNIbl9fSWlScW9OTl9fTjVBYjFaelBwZ1NSUkVxNndlTEZjeU1aSWZXUFZvM3A1V2dNVGxaTWFfQnFucUpLLTNMaUV1NF8zN0UyX0tobk0xY0FaVHBlS0E5S1EtMjJudGM1RkJFdjV4dlFVclhwWkZlOGpCTHFvd0wyTnA1bXhhSTRHSHRKZk1NZExyb2VQYlE1QVhBSzhWYXFQMDlHZG5CR0QtOFl1UG1ZN3V5cTFoUXg1OGxWVEg0OW5FUm1iNEVVZDNJd08wSnpqTVJCUW5YV1ZVbDBzOUg0M1FWNjZsNEZyczJhaWg4SUlHaDdOck1udWV2Y01BWVdLZDhONkMzLXVXVWRzYTh5ZjdzeDNRX1k0TTlfUDBqNV96VlNEVnVUeEVDamdlOVI4anNGMGpMYTM4Q1JZbmdfU05TX3NjdGwwZFBab01IcGo0a0hncmdMc0tsZG1lZ0IwVzV2d3hkaXcwYWJLS1V5b0pRLUFoYzZnbTZpbFRVMDlRQ0dNVUxOcW9NLWNMd1ZncEE3V21MZ1M2R0lYVVotV2c5TmdvNTYwU3hzUlhpQVloS20wb3psRERpazVjN1NDWmFvU1JTRmFsbXRUaXZBUWxhUGE3c2FlSGFCckRJSWExc3dyVE45bHpzNjJJbTBYa2p0bkxKOGhzYWoxSGNleHpNNFB2VGluNU5oYnNaSXEzLXJTWVk0S2JwazdmSEY3SUx4S0xFQTNPMUVJcEZzdms1ZFZDbV9ERGEtRFZXdTU5X2t6TVZLcnFEcUx5YUpVZ2FBM0NZM0UyeTlxTS1ScWpUNDAzb0ROdVJQTk9ZdlU0bUF6dXJnRjhQMWdWeWItdnA4YTZwVC0yV2RtVm9PT0ZZazlIb21UbHpIMEN6RHR2bXUyMlRoLTN0dF9GcEtjbWZ2NHBsTmZPeHVZbmVENm1KanRvb1VTaDhnWEFXVWZsNm04N3VYZ2c3bFJqb3RyMGtqR1VoemhYUUdZTVJKb0t3dUpSTkR0elhQTVdNVDlYTDRMbnA0ZHZoV3pBQThOUVdCTkoxYnRnYU9IZi1QM1hPSlR3akNJcDdqOD0==) # <-- Put your encrypted keystore file here
        CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmcwbDdiZmM5aEJpSlVKUlNUUVRhUVczUnh0M1NaaFJ6NjJTMWhiT2R0VHJMdDBpOUM3aDhsU1l2aUtMNzNvd2Q5YlF1dlBYWmJpUFVYakhsUGhHVC1nSW41bEE9PQ==) # <-- Put your encrypted keystore password here
        CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmcwbDdiZmM5aEJpSlVKUlNUUVRhUVczUnh0M1NaaFJ6NjJTMWhiT2R0VHJMdDBpOUM3aDhsU1l2aUtMNzNvd2Q5YlF1dlBYWmJpUFVYakhsUGhHVC1nSW41bEE9PQ==) # <-- Put your encrypted keystore alias password here
        CM_KEYSTORE_PATH: /tmp/keystore.keystore
        CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmcwbDcweUxYUmxxaTVEeFhxY0hTQWVteUlTMWhiNzVpazlERUFNR1g5akMxLTA4NjVKaXJ2dEdVdDhDRVV5WlNqa25kTW1raDJuYlRiT2o2YW1qTmpMWDc4akE9PQ==) # <-- Put your encrypted keystore alias username here 
      node: 15.13.0
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up key properties
        script: |
          echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
          cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
          storePassword=$FCI_KEYSTORE_PASSWORD
          keyPassword=$FCI_KEY_PASSWORD
          keyAlias=$FCI_KEY_ALIAS
          storeFile=/tmp/keystore.keystore
          EOF
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - name: Get Flutter packages
        script: |
          cd . && flutter packages pub get
      - name: Flutter analyze
        script: |
          cd . && flutter analyze
      - name: Flutter unit tests
        script: |
          cd . && flutter test
        ignore_failure: true          
      - name: Install pods
        script: |
          find . -name "Podfile" -execdir pod install \;
      - name: Build APK with Flutter  
        script: |
          cd . && flutter build apk --release --build-name=1.0.0 --build-number=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))
      - name: App upload and Set app id in environment variable
        script: |      
           APP_URL=$(curl -u "nihalagazade_JxPH1i:4y5LkQnzzGkv2s7ERZ4q" -X POST "https://api-cloud.browserstack.com/app-automate/upload" -F "file=@build/app/outputs/flutter-apk/app-release.apk" | jq -r '.app_url') 
           echo $APP_URL
           TEST_URL=$(curl -u "nihalagazade_JxPH1i:4y5LkQnzzGkv2s7ERZ4q" -X POST "https://api-cloud.browserstack.com/app-automate/espresso/test-suite" -F "file=@android/app/build/outputs/apk/androidTest/release/app-release-androidTest.apk" | jq -r '.test_url')
           echo $TEST_URL
           curl -X POST "https://api-cloud.browserstack.com/app-automate/espresso/build" -d '{"devices": ["Google Pixel 3-9.0"], "app": "'"$APP_URL"'", "deviceLogs" : true, "testSuite": "'"$TEST_URL"'"}' -H "Content-Type: application/json" -u "nihalagazade_JxPH1i:4y5LkQnzzGkv2s7ERZ4q"    
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
